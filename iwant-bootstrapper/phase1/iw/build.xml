<project name="iwant-bootstrap" default="help" basedir=".">

	<target name="help" description="help" depends="iwant-src">
	</target>

	<target name="iwant-src" depends="iwant-src-status,iwant-from-information, svnkit" unless="iwant-src-uptodate">
		<echo message="TODO use -r $${iwant-rev} when set" />
		<echo message="Exporting iwant src revision ${iwant-rev} from ${iwant-url}" />
		<java classname="org.tmatesoft.svn.cli.SVN" dir="${basedir}" fork="true" failonerror="true">
			<arg value="export" />
			<!--<arg value="-r" />
			<arg value="${iwant-rev}" />-->
			<arg value="${iwant-url}" />
			<arg value="${iwant-src}" />
			<classpath>
				<fileset dir="${svnkit}">
					<include name="**/svnkit.jar" />
					<include name="**/svnkit-cli.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="iwant-src-status" depends="iwant-from-information, cached-internal">
		<property name="iwant-src" location="${cached-internal}/iwant-r${iwant-rev}" />
		<available file="${iwant-src}" property="iwant-src-uptodate" />
	</target>

	<target name="svnkit" depends="svnkit-status, svnkit.zip" unless="svnkit-uptodate">
		<unzip dest="${svnkit}" src="${svnkit.zip}" />
	</target>

	<target name="svnkit-status" depends="svnkit.name, cached-internal">
		<property name="svnkit" location="${cached-internal}/${svnkit.name}" />
		<available file="${svnkit}" property="svnkit-uptodate" />
	</target>

	<target name="svnkit.zip" depends="svnkit.zip-status" unless="svnkit.zip-uptodate">
		<get dest="${svnkit.zip}.unverified" src="http://www.svnkit.com/${svnkit.zip.name}" />
		<checksum algorithm="MD5" property="329ab36ad39e878d54f92c3891e5a486" verifyproperty="svnkit.zip-md5-status" file="${svnkit.zip}.unverified" />
		<condition property="svnkit.zip-isok">
			<equals arg1="true" arg2="${svnkit.zip-md5-status}" />
		</condition>
		<fail message="Checksum failed!" unless="svnkit.zip-isok" />
		<move file="${svnkit.zip}.unverified" tofile="${svnkit.zip}" />
	</target>

	<target name="svnkit.zip-status" depends="svnkit.name, cached-internal">
		<property name="svnkit.zip.name" value="${svnkit.name}.zip" />
		<property name="svnkit.zip" location="${cached-internal}/${svnkit.zip.name}" />
		<available file="${svnkit.zip}" property="svnkit.zip-uptodate" />
	</target>

	<target name="svnkit.name">
		<property name="svnkit.name" value="org.tmatesoft.svn_1.3.5.standalone.nojna" />
	</target>

	<target name="iwant-from-information" depends="i-have/iwant-from.conf">
		<property file="${i-have/iwant-from.conf}" />
		<fail message="Please specify iwant-rev in ${i-have/iwant-from.conf}" unless="iwant-rev" />
		<fail message="Please specify iwant-url in ${i-have/iwant-from.conf}" unless="iwant-url" />
	</target>

	<target name="i-have/iwant-from.conf" depends="i-have/iwant-from.conf-status" unless="i-have/iwant-from.conf_exists">
		<echo file="${i-have/iwant-from.conf}">iwant-rev=140
iwant-url=https://iwant.svn.sourceforge.net/svnroot/iwant/trunk
</echo>
		<fail message="I created file ${i-have/iwant-from.conf} for your convenience.
Please edit it and rerun me." />
	</target>

	<target name="i-have/iwant-from.conf-status" depends="i-have">
		<property name="i-have/iwant-from.conf" location="${i-have}/iwant-from.conf" />
		<available file="${i-have/iwant-from.conf}" property="i-have/iwant-from.conf_exists" />
	</target>

	<target name="cached-internal" depends="cached">
		<property name="cached-internal" location="${cached}/.internal" />
		<mkdir dir="${cached-internal}" />
	</target>

	<target name="cached" depends="as-somebody">
		<property name="cached" location="${as-somebody}/iwant/cached" />
		<mkdir dir="${cached}" />
	</target>

	<target name="i-have" depends="as-somebody">
		<property name="i-have" location="${as-somebody}/i-have" />
		<mkdir dir="${i-have}" />
	</target>

	<target name="as-somebody">
		<property name="as-somebody" location=".." />
	</target>

</project>
